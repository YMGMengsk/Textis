package application;

import javafx.application.Platform;
import javafx.scene.Scene;
import javafx.scene.control.ProgressBar;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.BorderPane;
import javafx.stage.Stage;
import javafx.stage.StageStyle;

import java.io.File;
import java.io.IOException;

import javax.sound.sampled.*;

public class SplashScreen {

	//Objects
	
    private Stage splashStage;
    
    private ProgressBar progressBar; 
    
    //Objects

    public SplashScreen() {
    	
        splashStage = new Stage();
        
        //Icon
        
        Image icon = new Image("/picture/Logo.png");
        
        splashStage.getIcons().add(icon);
        
        //Icon
        
        splashStage.initStyle(StageStyle.UNDECORATED); 

        //Loadingscreen Picture
        
        BorderPane root = new BorderPane();
        
        ImageView splashImage = new ImageView(new Image("/picture/Logo_LoadScreen.png")); 
        
        splashImage.setFitWidth(400); 
        
        splashImage.setFitHeight(200); 
        
        splashImage.setPreserveRatio(true);
        
        root.setCenter(splashImage); 
        
        //Loadingscreen Picture

        progressBar = new ProgressBar();
        
        progressBar.setPrefWidth(500);
        
        root.setBottom(progressBar); 
        
        //
        Scene scene = new Scene(root, 500, 300);
        
        splashStage.setScene(scene);
        //
        
        //playing the Sound
        
       playSound("/audio/startsound.wav");
       
    }
    
    	//playing the Sound
    
    //Hides and shows loadingscreen
    
    public void show() { 
    	
        splashStage.show();
        
    }

    public void hide() { 
    	
        splashStage.hide();
        
    }
    
    //Hides and shows loadingscreen

    public void updateProgress(double progress) {
    	
        Platform.runLater(() -> progressBar.setProgress(progress));
        
    }
    
    //Audio Method
    
    private void playSound(String soundFilePath) {
    	
        new Thread(() -> {
        	
            try {
            	
                Clip clip = AudioSystem.getClip();
                
                AudioInputStream inputStream = AudioSystem.getAudioInputStream(getClass().getResource(soundFilePath));
                
                clip.open(inputStream);
                
                clip.start();
                
            } catch (UnsupportedAudioFileException | IOException | LineUnavailableException e) {
            	
                e.printStackTrace();
                
            }
            
        }).start();
        
    }
    //Audio Method	
    }
    
